"use strict";(self.webpackChunkasbplayer_docs=self.webpackChunkasbplayer_docs||[]).push([[66],{8077:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/external-api","title":"External API","description":"This page is intended to be an technical reference on asbplayer\'s external interface and the pre-packaged WebSocket server that implements this interface. See the guide for how to setup the WebSocket server.","source":"@site/docs/reference/external-api.md","sourceDirName":"reference","slug":"/reference/external-api","permalink":"/asbplayer-docs/docs/reference/external-api","draft":false,"unlisted":false,"editUrl":"https://github.com/killergerbah/asbplayer-docs/edit/main/docs/reference/external-api.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Settings","permalink":"/asbplayer-docs/docs/reference/settings"},"next":{"title":"Common issues","permalink":"/asbplayer-docs/docs/common-issues"}}');var a=s(4848),r=s(8453);const i={sidebar_position:2},o="External API",c={},d=[{value:"WebSocket commands",id:"websocket-commands",level:2},{value:"<code>mine-subtitle</code>",id:"mine-subtitle",level:3},{value:"Request",id:"request",level:4},{value:"Response",id:"response",level:4},{value:"<code>load-subtitles</code>",id:"load-subtitles",level:3},{value:"Request",id:"request-1",level:4},{value:"Response",id:"response-1",level:4},{value:"<code>seek-timestamp</code>",id:"seek-timestamp",level:3},{value:"Request",id:"request-2",level:4},{value:"Response",id:"response-2",level:4},{value:"HTTP-based API",id:"http-based-api",level:2},{value:"AnkiConnect proxy",id:"ankiconnect-proxy",level:2},{value:"Server configuration",id:"server-configuration",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"external-api",children:"External API"})}),"\n",(0,a.jsxs)(n.p,{children:["This page is intended to be an technical reference on asbplayer's external interface and the ",(0,a.jsx)(n.a,{href:"https://github.com/killergerbah/asbplayer/tree/main/scripts/web-socket-server",children:"pre-packaged WebSocket server"})," that implements this interface. See the ",(0,a.jsx)(n.a,{href:"../guides/web-socket-server",children:"guide"})," for how to setup the WebSocket server."]}),"\n",(0,a.jsx)(n.h2,{id:"websocket-commands",children:"WebSocket commands"}),"\n",(0,a.jsx)(n.p,{children:"asbplayer, as a WebSocket client, responds to the following commands from a WebSocket server."}),"\n",(0,a.jsx)(n.h3,{id:"mine-subtitle",children:(0,a.jsx)(n.code,{children:"mine-subtitle"})}),"\n",(0,a.jsx)(n.h4,{id:"request",children:"Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\n    "command": "mine-subtitle",\n    // Message ID to correlate with asbplayer\'s response\n    "messageId": "10281760-d787-4356-8572-f698d8ff3884",\n    "body": {\n        // 0 = "None", 1 = "Show anki dialog", 2 = "Update last card", 3 = "Export card"\n        "postMineAction": 1,\n        // Key-value pairs corresponding to an Anki note type\n        "fields": {\n            "key1": "value1",\n            "key2": "value2"\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"response",children:"Response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\n    "command": "response",\n    // Same message ID received in request\n    "messageId": "10281760-d787-4356-8572-f698d8ff3884",\n    "body": {\n        // Whether the command was successfully published to an asbplayer client\n        "published": true\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"load-subtitles",children:(0,a.jsx)(n.code,{children:"load-subtitles"})}),"\n",(0,a.jsx)(n.h4,{id:"request-1",children:"Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\n    "command": "load-subtitles",\n    // Message ID to correlate with asbplayer\'s response\n    "messageId": "3565510c-342f-4cec-ad2e-dee81af88d75",\n    "body": {\n        "files": [{\n            // Name of the file, including its extension\n            "name": "some-file.srt",\n            // Base64-encoded file contents\n            "base64": "Zm9vYmFyY..."\n        }]\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"response-1",children:"Response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\n    "command": "response",\n    // Same message ID received in request\n    "messageId": "3565510c-342f-4cec-ad2e-dee81af88d75",\n    "body": {}\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"seek-timestamp",children:(0,a.jsx)(n.code,{children:"seek-timestamp"})}),"\n",(0,a.jsx)(n.h4,{id:"request-2",children:"Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\n    "command": "seek-timestamp",\n    // Message ID to correlate with asbplayer\'s response\n    "messageId": "6e4b2d8f-3a1c-4d9e-8f7b-2c0a9d5e1f3b",\n    "body": {\n        //The timestamp to seek in seconds\n        "timestamp": 30.5,\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"response-2",children:"Response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\n    "command": "response",\n    // Same message ID received in request\n    "messageId": "6e4b2d8f-3a1c-4d9e-8f7b-2c0a9d5e1f3b",\n    "body": {}\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"http-based-api",children:"HTTP-based API"}),"\n",(0,a.jsx)(n.p,{children:"The WebSocket server also implements an HTTP-based API which can trigger the commands above."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"POST asbplayer/load-subtitles"})," (",(0,a.jsx)(n.a,{href:"https://github.com/killergerbah/asbplayer/blob/main/scripts/web-socket-server/cli/load-subtitles",children:"script"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"POST asbplayer/seek"})," (",(0,a.jsx)(n.a,{href:"https://github.com/killergerbah/asbplayer/blob/main/scripts/web-socket-server/cli/seek",children:"script"}),")"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"ankiconnect-proxy",children:"AnkiConnect proxy"}),"\n",(0,a.jsxs)(n.p,{children:["It also functions as an AnkiConnect proxy that allows ",(0,a.jsx)(n.code,{children:"addNote"})," requests to be enriched with asbplayer-provided context, such as audio and screenshots."]}),"\n",(0,a.jsxs)(n.p,{children:["The proxy passes through all AnkiConnect requests as-is except for ",(0,a.jsx)(n.code,{children:"addNote"}),". The proxy's specific behavior in the case of ",(0,a.jsx)(n.code,{children:"addNote"})," depends on the value of ",(0,a.jsx)(n.code,{children:"POST_MINE_ACTION"})," in the configuration documented below."]}),"\n",(0,a.jsx)(n.h2,{id:"server-configuration",children:"Server configuration"}),"\n",(0,a.jsxs)(n.p,{children:["The server is configured with an ",(0,a.jsx)(n.code,{children:".env"})," file placd next to it in the same directory. Below is an example file with explanation."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"# Port that the proxy will listen on\nPORT=8766\n\n# AnkiConnect URL\nANKI_CONNECT_URL=http://127.0.0.1:8765\n\n# Action for asbplayer to take when the proxy receives an addNote request\n# 0 = 'None'\n# 1 = 'Open Anki dialog'\n# 2 = 'Update last card' (updates last card with asbplayer media AFTER passing through original addNote request)\n# 3 = 'Export card'\nPOST_MINE_ACTION=2\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);